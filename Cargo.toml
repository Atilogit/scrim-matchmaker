[workspace]
resolver = "2"
members = ["scrim-matchmaker"]

[workspace.lints.clippy]
# lint groups
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }

# restrictions
alloc_instead_of_core = "forbid"
as_underscore = "forbid"
assertions_on_result_states = "deny"
create_dir = "forbid"
dbg_macro = "warn"
decimal_literal_representation = "warn"
disallowed_script_idents = "forbid"
empty_drop = "forbid"
empty_enum_variants_with_brackets = "warn"
empty_structs_with_brackets = "warn"
exit = "forbid"
filetype_is_file = "forbid"
fn_to_numeric_cast_any = "forbid"
format_push_string = "forbid"
if_then_some_else_none = "deny"
infinite_loop = "deny"
inline_asm_x86_att_syntax = "forbid"
iter_over_hash_type = "warn"
lossy_float_literal = "forbid"
mem_forget = "deny"
missing_asserts_for_indexing = "warn"
mixed_read_write_in_expression = "forbid"
multiple_unsafe_ops_per_block = "deny"
mutex_atomic = "deny"
needless_raw_strings = "warn"
non_ascii_literal = "warn"
panic_in_result_fn = "warn"
partial_pub_fields = "warn"
pub_without_shorthand = "forbid"
rc_buffer = "deny"
rc_mutex = "deny"
redundant_type_annotations = "warn"
ref_patterns = "forbid"
rest_pat_in_fully_bound_structs = "forbid"
same_name_method = "warn"
self_named_module_files = "forbid"
semicolon_outside_block = "forbid"
separated_literal_suffix = "forbid"
str_to_string = "forbid"
string_lit_chars_any = "forbid"
string_slice = "warn"
string_to_string = "forbid"
tests_outside_test_module = "forbid"
todo = "warn"
try_err = "forbid"
undocumented_unsafe_blocks = "deny"
unimplemented = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unneeded_field_pattern = "deny"
unwrap_in_result = "warn"
verbose_file_reads = "forbid"

# overrides
option_if_let_else = "allow"
module_name_repetitions = "allow"
